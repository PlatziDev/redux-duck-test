{
  "name": "redux-duck-test",
  "tagline": "Helper functions for testing redux ducks made with redux-duck library",
  "body": "# Redux Duck Test\r\nHelper functions for testing redux ducks made with [redux-duck](https://github.com/sergiodxa/redux-duck/) library.\r\n\r\n## Installation\r\n```bash\r\nnpm i -D redux-duck-test\r\n```\r\n\r\n## API\r\n### Test action type\r\n```javascript\r\nimport { testType } from 'redux-duck-test';\r\nimport { ADD } from '../duck/messages';\r\n\r\nconst result = testType({\r\n  expected: ADD,\r\n  actionName: 'ADD',\r\n  duckName: 'messages',\r\n  moduleName: 'my-app',\r\n});\r\n```\r\n- `testType` receive an object with the test specification.\r\n- The `expected` key is your action type.\r\n- The `actionName` key is the name of your action (eg. `ADD`).\r\n- The `duckName` key is the name of your duck (eg. `messages`).\r\n- The `moduleName` key is the name of your module (eg. `my-app`) (optional).\r\n\r\n### Test action creator\r\n```javascript\r\nimport { testAction } from 'redux-duck-test';\r\nimport { ADD, add } from '../duck/messages';\r\n\r\nconst result = testAction({\r\n  actionCreator: add,\r\n  payload: {\r\n    id: 1,\r\n    content: 'hello world!',\r\n  },\r\n  expected: {\r\n    type: ADD,\r\n    payload: {\r\n      id: 1,\r\n      content: 'hello world!',\r\n    },\r\n  },\r\n});\r\n```\r\n- `testAction` receive an object with the test specification.\r\n- The `actionCreator` key is the action creator function to test.\r\n- The `payload` key is the payload to send to the action creator.\r\n- The `expected` key is the expected action object.\r\n\r\n### Test reducer\r\n```javascript\r\nimport { testReducer } from 'redux-duck-test';\r\nimport { Map as map } from 'immutable';\r\nimport reducer, { add } from '../duck/messages';\r\n\r\nconst result = testReducer({\r\n  reducer,\r\n  state: map(),\r\n  action: add({\r\n    id: 1,\r\n    content: 'hello world',\r\n  }),\r\n  expected: map({\r\n    '1': {\r\n      id: 1,\r\n      content: 'hello world',\r\n    },\r\n  }),\r\n});\r\n```\r\n- `testReducer` receive an object with the test specification.\r\n- The `reducer` key is the reducer to test.\r\n- The `state` key is the initial state passed to the reducer.\r\n- The `action` key is the action to perform in the reducer.\r\n- The `expected` key is the expected next state.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}